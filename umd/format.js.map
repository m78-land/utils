{"version":3,"sources":["/Users/lixianjie/project/openSource/utils/src/format.ts"],"sourcesContent":["import { isTruthyOrZero } from \"./is.js\";\n\n/**\n * 将小于10且大于0的数字转为填充0的字符 如 '01' '05', 小于1的数字始终返回'00'\n * @param {number} number\n */\nexport function padSingleNumber(number: number) {\n  if (number < 1) {\n    return \"00\";\n  }\n\n  if (number < 10) {\n    return \"0\" + String(number);\n  }\n\n  return String(number);\n}\n\n/* 以指定规则格式化字符 */\nexport const validateFormatString = /^(\\s?\\d\\s?,?)+$/;\n\nconst defaultConfig = {\n  delimiter: \" \",\n  repeat: false,\n  lastRepeat: false,\n  reverse: false,\n};\n\nfunction getPatterns(str, pattern, options = {}) {\n  const { repeat, lastRepeat, reverse } = { ...defaultConfig, ...options };\n\n  if (!validateFormatString.test(pattern)) {\n    console.warn(\n      `invalid pattern: ${pattern}, must match the /^[\\\\s?\\\\d\\\\s?,?]+$/ rule`\n    );\n    return;\n  }\n\n  // 生成模式数组\n  let patterns = pattern\n    .split(\",\")\n    .map((p) => p.trim())\n    .filter((p) => !!p);\n\n  if (!patterns.length) return;\n\n  // 字符转为数组方便操作\n  const strArr = reverse ? str.split(\"\").reverse() : str.split(\"\");\n\n  // repeat处理\n  if (repeat || lastRepeat) {\n    // 传入模式能匹配到的最大长度\n    const maxLength = patterns.reduce((prevIndex, index) => {\n      return prevIndex + Number(index);\n    }, 0);\n\n    // 需要额外填充的模式长度\n    let fillLength;\n\n    // 模式组最后一位，用于lastRepeat\n    const lastPatter = Number(patterns[patterns.length - 1]);\n\n    if (repeat) {\n      // (字符长度 - 最大匹配长度) / 最大匹配长度\n      fillLength = Math.ceil((strArr.length - maxLength) / maxLength);\n    }\n\n    if (lastRepeat) {\n      // (字符长度 - 最大匹配长度) / 最后一位匹配符能匹配的长度\n      fillLength = Math.ceil((strArr.length - maxLength) / lastPatter);\n    }\n\n    const originArr = lastRepeat ? [lastPatter] : [...patterns];\n\n    Array.from({ length: fillLength }).forEach(() => {\n      patterns = [...patterns, ...originArr];\n    });\n  }\n\n  return {\n    patterns,\n    strArr,\n  };\n}\n\ninterface FormatStringOption {\n  /** ' ' | 分隔符 */\n  delimiter?: string;\n  /** false | 当字符长度超过pattern可匹配到的长度时，重复以当前pattern对剩余字符进行格式化 */\n  repeat?: boolean;\n  /** false | 当字符长度超过pattern可匹配到的长度时，重复以当前pattern的最后一位对剩余字符进行格式化 */\n  lastRepeat?: boolean;\n  /** false | 反转字符串后再进行操作 */\n  reverse?: boolean;\n}\n\n/**\n * 根据传入的模式对字符进行格式化\n * @param str {string} - 需要进行格式化的字符\n * @param pattern {string} - 格式为 `1,2,3,4` 规则的模式字符，数字两端可包含空格\n * @param options - 配置对象\n */\nexport function formatString(str, pattern, options = {}) {\n  const opt = { ...defaultConfig, ...options };\n  const patternMeta = getPatterns(str, pattern, opt);\n\n  if (!patternMeta) return;\n\n  const { patterns, strArr } = patternMeta;\n\n  patterns.reduce((prevPattern, _pattern, ind) => {\n    const currentIndex = prevPattern + Number(_pattern);\n\n    // 替换位置为 前面所有pattern + 当前pattern + 已匹配次数\n    const replaceIndex = currentIndex + ind;\n\n    if (replaceIndex < strArr.length) {\n      strArr.splice(replaceIndex, 0, opt.delimiter);\n    }\n\n    return currentIndex;\n  }, 0);\n\n  return opt.reverse ? strArr.reverse().join(\"\") : strArr.join(\"\");\n}\n\n/**\n * 对被`format()`过的字符进行反格式化, 除了str, 其他参数必须与执行`format()`时传入的一致\n * @param str {string} - 需要进行反格式化的字符\n * @param pattern {string} - 格式为 `1,2,3,4` 规则的模式字符，数字两端可包含空格\n * @param options - 配置对象\n */\nexport function unFormatString(\n  str: string,\n  pattern: string,\n  options: FormatStringOption = {}\n) {\n  const opt = { ...defaultConfig, ...options };\n  const { delimiter } = opt;\n  const patternMeta = getPatterns(str, pattern, opt);\n\n  if (!patternMeta) return;\n\n  const { patterns, strArr } = patternMeta;\n\n  patterns.reduce((prev, pt) => {\n    const index = Number(pt) + prev;\n\n    /* 只在字符首位匹配时才执行替换, 在某些场景会有用（fr的input处理双向绑定时） */\n    if (strArr[index] === delimiter[0]) {\n      strArr.splice(index, delimiter.length);\n    }\n\n    return index;\n  }, 0);\n\n  return opt.reverse ? strArr.reverse().join(\"\") : strArr.join(\"\");\n}\n\n/** 返回入参中第一个truthy值或0, 用于代替 xx || xx2 || xx3 */\nexport function getFirstTruthyOrZero(...args) {\n  for (const arg of args) {\n    if (isTruthyOrZero(arg)) {\n      return arg;\n    }\n  }\n  return false;\n}\n\n/** 当左边的值不为truthy或0时，返回feedback */\nexport function vie(arg, feedback = \"-\") {\n  return isTruthyOrZero(arg) ? arg : feedback;\n}\n"],"names":["padSingleNumber","validateFormatString","formatString","unFormatString","getFirstTruthyOrZero","vie","number","String","defaultConfig","delimiter","repeat","lastRepeat","reverse","getPatterns","str","pattern","options","test","console","warn","patterns","split","map","p","trim","filter","length","strArr","maxLength","reduce","prevIndex","index","Number","fillLength","lastPatter","Math","ceil","originArr","Array","from","forEach","opt","patternMeta","prevPattern","_pattern","ind","currentIndex","replaceIndex","splice","join","prev","pt","args","arg","isTruthyOrZero","feedback"],"mappings":"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"}