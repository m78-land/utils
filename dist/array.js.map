{"version":3,"sources":["/Users/lixianjie/project/openSource/utils/src/array.ts"],"sourcesContent":["import { isArray } from \"./is.js\";\n\n/**\n * swap index of two items in array.\n * if the index is exceeded, no action is performed.\n * return the original array after operation.\n * */\nexport function swap<T extends Array<any>>(\n  arr: T,\n  sourceInd: number,\n  targetInd: number\n): T {\n  if (sourceInd < 0 || targetInd < 0) return arr;\n  if (sourceInd > arr.length - 1 || targetInd > arr.length - 1) return arr;\n  arr.splice(targetInd, 1, arr.splice(sourceInd, 1, arr[targetInd])[0]);\n  return arr;\n}\n\n/**\n * move array item location `form -> to`, return the original array after operation.\n * */\nexport function move<T extends Array<any>>(\n  array: T,\n  form: number,\n  to: number\n): T | undefined {\n  if (form < 0 || to < 0) return array;\n  if (form > array.length - 1 || to > array.length - 1) return array;\n  array.splice(to, 0, ...array.splice(form, 1));\n  return array;\n}\n\n/**\n * receive T or T[], return T[]\n * */\nexport function ensureArray<T>(val: T[] | T): T[] {\n  return (isArray(val) ? val : [val]) as T[];\n}\n\n/**\n * array deduplication, use shallow compare\n * */\nexport function uniq<T extends Array<any>>(array: T): T {\n  const arr: any[] = [];\n\n  array.forEach(it => {\n    if (arr.indexOf(it) === -1) {\n      arr.push(it);\n    }\n  });\n\n  return arr as T;\n}\n\n/**\n * array deduplication, use comparator\n * */\nexport function uniqWith<T>(\n  array: T[],\n  comparator: (a: T, b: T) => boolean\n): T[] {\n  const arr: T[] = [];\n\n  array.forEach(it => {\n    let flag = false;\n    for (const item of arr) {\n      if (comparator(item, it)) {\n        flag = true;\n        break;\n      }\n    }\n\n    if (!flag) {\n      arr.push(it);\n    }\n  });\n\n  return arr;\n}\n"],"names":["isArray","swap","arr","sourceInd","targetInd","length","splice","move","array","form","to","ensureArray","val","uniq","forEach","it","indexOf","push","uniqWith","comparator","flag","item"],"mappings":"AAAA;AAAA,SAASA,OAAO,QAAQ,SAAS,CAAC;AAElC;;;;GAIG,GACH,OAAO,SAASC,IAAI,CAClBC,GAAM,EACNC,SAAiB,EACjBC,SAAiB,EACd;IACH,IAAID,SAAS,GAAG,CAAC,IAAIC,SAAS,GAAG,CAAC,EAAE,OAAOF,GAAG,CAAC;IAC/C,IAAIC,SAAS,GAAGD,GAAG,CAACG,MAAM,GAAG,CAAC,IAAID,SAAS,GAAGF,GAAG,CAACG,MAAM,GAAG,CAAC,EAAE,OAAOH,GAAG,CAAC;IACzEA,GAAG,CAACI,MAAM,CAACF,SAAS,EAAE,CAAC,EAAEF,GAAG,CAACI,MAAM,CAACH,SAAS,EAAE,CAAC,EAAED,GAAG,CAACE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtE,OAAOF,GAAG,CAAC;CACZ;AAED;;GAEG,GACH,OAAO,SAASK,IAAI,CAClBC,KAAQ,EACRC,IAAY,EACZC,EAAU,EACK;QAGfF,MAAK;IAFL,IAAIC,IAAI,GAAG,CAAC,IAAIC,EAAE,GAAG,CAAC,EAAE,OAAOF,KAAK,CAAC;IACrC,IAAIC,IAAI,GAAGD,KAAK,CAACH,MAAM,GAAG,CAAC,IAAIK,EAAE,GAAGF,KAAK,CAACH,MAAM,GAAG,CAAC,EAAE,OAAOG,KAAK,CAAC;IACnEA,CAAAA,MAAK,GAALA,KAAK,EAACF,MAAM,CAAZE,KAA6C,CAA7CA,MAAK,EAALA;QAAaE,EAAE;AAAE,SAAC;KAA2B,CAA7CF,MAA6C,CAAzB,qBAAGA,KAAK,CAACF,MAAM,CAACG,IAAI,EAAE,CAAC,CAAC,CAArBD,CAAsB,CAAA,CAAC;IAC9C,OAAOA,KAAK,CAAC;CACd;AAED;;GAEG,GACH,OAAO,SAASG,WAAW,CAAIC,GAAY,EAAO;IAChD,OAAQZ,OAAO,CAACY,GAAG,CAAC,GAAGA,GAAG,GAAG;QAACA,GAAG;KAAC,CAAS;CAC5C;AAED;;GAEG,GACH,OAAO,SAASC,IAAI,CAAuBL,KAAQ,EAAK;IACtD,IAAMN,GAAG,GAAU,EAAE,AAAC;IAEtBM,KAAK,CAACM,OAAO,CAACC,SAAAA,EAAE,EAAI;QAClB,IAAIb,GAAG,CAACc,OAAO,CAACD,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE;YAC1Bb,GAAG,CAACe,IAAI,CAACF,EAAE,CAAC,CAAC;SACd;KACF,CAAC,CAAC;IAEH,OAAOb,GAAG,CAAM;CACjB;AAED;;GAEG,GACH,OAAO,SAASgB,QAAQ,CACtBV,KAAU,EACVW,UAAmC,EAC9B;IACL,IAAMjB,GAAG,GAAQ,EAAE,AAAC;IAEpBM,KAAK,CAACM,OAAO,CAACC,SAAAA,EAAE,EAAI;QAClB,IAAIK,IAAI,GAAG,KAAK,AAAC;YACZ,yBAAU,SAAV,iBAAU,UAAV,cAAU;;YAAf,QAAK,SAAU,GAAIlB,GAAG,qBAAjB,KAAU,IAAV,yBAAU,IAAV,KAAU,GAAV,SAAU,gBAAV,yBAAU,QAAS;gBAAnB,IAAMmB,IAAI,GAAV,KAAU,MAAA;gBACb,IAAIF,UAAU,CAACE,IAAI,EAAEN,EAAE,CAAC,EAAE;oBACxBK,IAAI,GAAG,IAAI,CAAC;oBACZ,MAAM;iBACP;aACF;;YALI,iBAAU;YAAV,cAAU;;;qBAAV,yBAAU,IAAV,SAAU;oBAAV,SAAU;;;oBAAV,iBAAU;0BAAV,cAAU;;;;QAOf,IAAI,CAACA,IAAI,EAAE;YACTlB,GAAG,CAACe,IAAI,CAACF,EAAE,CAAC,CAAC;SACd;KACF,CAAC,CAAC;IAEH,OAAOb,GAAG,CAAC;CACZ"}