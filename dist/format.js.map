{"version":3,"sources":["/Users/lixianjie/project/openSource/utils/src/format.ts"],"sourcesContent":["import { isTruthyOrZero } from \"./is.js\";\n\n/**\n * 将小于10且大于0的数字转为填充0的字符 如 '01' '05', 小于1的数字始终返回'00'\n * @param {number} number\n */\nexport function padSingleNumber(number: number) {\n  if (number < 1) {\n    return \"00\";\n  }\n\n  if (number < 10) {\n    return \"0\" + String(number);\n  }\n\n  return String(number);\n}\n\n/* 以指定规则格式化字符 */\nexport const validateFormatString = /^(\\s?\\d\\s?,?)+$/;\n\nconst defaultConfig = {\n  delimiter: \" \",\n  repeat: false,\n  lastRepeat: false,\n  reverse: false,\n};\n\nfunction getPatterns(str, pattern, options = {}) {\n  const { repeat, lastRepeat, reverse } = { ...defaultConfig, ...options };\n\n  if (!validateFormatString.test(pattern)) {\n    console.warn(\n      `invalid pattern: ${pattern}, must match the /^[\\\\s?\\\\d\\\\s?,?]+$/ rule`\n    );\n    return;\n  }\n\n  // 生成模式数组\n  let patterns = pattern\n    .split(\",\")\n    .map((p) => p.trim())\n    .filter((p) => !!p);\n\n  if (!patterns.length) return;\n\n  // 字符转为数组方便操作\n  const strArr = reverse ? str.split(\"\").reverse() : str.split(\"\");\n\n  // repeat处理\n  if (repeat || lastRepeat) {\n    // 传入模式能匹配到的最大长度\n    const maxLength = patterns.reduce((prevIndex, index) => {\n      return prevIndex + Number(index);\n    }, 0);\n\n    // 需要额外填充的模式长度\n    let fillLength;\n\n    // 模式组最后一位，用于lastRepeat\n    const lastPatter = Number(patterns[patterns.length - 1]);\n\n    if (repeat) {\n      // (字符长度 - 最大匹配长度) / 最大匹配长度\n      fillLength = Math.ceil((strArr.length - maxLength) / maxLength);\n    }\n\n    if (lastRepeat) {\n      // (字符长度 - 最大匹配长度) / 最后一位匹配符能匹配的长度\n      fillLength = Math.ceil((strArr.length - maxLength) / lastPatter);\n    }\n\n    const originArr = lastRepeat ? [lastPatter] : [...patterns];\n\n    Array.from({ length: fillLength }).forEach(() => {\n      patterns = [...patterns, ...originArr];\n    });\n  }\n\n  return {\n    patterns,\n    strArr,\n  };\n}\n\ninterface FormatStringOption {\n  /** ' ' | 分隔符 */\n  delimiter?: string;\n  /** false | 当字符长度超过pattern可匹配到的长度时，重复以当前pattern对剩余字符进行格式化 */\n  repeat?: boolean;\n  /** false | 当字符长度超过pattern可匹配到的长度时，重复以当前pattern的最后一位对剩余字符进行格式化 */\n  lastRepeat?: boolean;\n  /** false | 反转字符串后再进行操作 */\n  reverse?: boolean;\n}\n\n/**\n * 根据传入的模式对字符进行格式化\n * @param str {string} - 需要进行格式化的字符\n * @param pattern {string} - 格式为 `1,2,3,4` 规则的模式字符，数字两端可包含空格\n * @param options - 配置对象\n */\nexport function formatString(str, pattern, options = {}) {\n  const opt = { ...defaultConfig, ...options };\n  const patternMeta = getPatterns(str, pattern, opt);\n\n  if (!patternMeta) return;\n\n  const { patterns, strArr } = patternMeta;\n\n  patterns.reduce((prevPattern, _pattern, ind) => {\n    const currentIndex = prevPattern + Number(_pattern);\n\n    // 替换位置为 前面所有pattern + 当前pattern + 已匹配次数\n    const replaceIndex = currentIndex + ind;\n\n    if (replaceIndex < strArr.length) {\n      strArr.splice(replaceIndex, 0, opt.delimiter);\n    }\n\n    return currentIndex;\n  }, 0);\n\n  return opt.reverse ? strArr.reverse().join(\"\") : strArr.join(\"\");\n}\n\n/**\n * 对被`format()`过的字符进行反格式化, 除了str, 其他参数必须与执行`format()`时传入的一致\n * @param str {string} - 需要进行反格式化的字符\n * @param pattern {string} - 格式为 `1,2,3,4` 规则的模式字符，数字两端可包含空格\n * @param options - 配置对象\n */\nexport function unFormatString(\n  str: string,\n  pattern: string,\n  options: FormatStringOption = {}\n) {\n  const opt = { ...defaultConfig, ...options };\n  const { delimiter } = opt;\n  const patternMeta = getPatterns(str, pattern, opt);\n\n  if (!patternMeta) return;\n\n  const { patterns, strArr } = patternMeta;\n\n  patterns.reduce((prev, pt) => {\n    const index = Number(pt) + prev;\n\n    /* 只在字符首位匹配时才执行替换, 在某些场景会有用（fr的input处理双向绑定时） */\n    if (strArr[index] === delimiter[0]) {\n      strArr.splice(index, delimiter.length);\n    }\n\n    return index;\n  }, 0);\n\n  return opt.reverse ? strArr.reverse().join(\"\") : strArr.join(\"\");\n}\n\n/** 返回入参中第一个truthy值或0, 用于代替 xx || xx2 || xx3 */\nexport function getFirstTruthyOrZero(...args) {\n  for (const arg of args) {\n    if (isTruthyOrZero(arg)) {\n      return arg;\n    }\n  }\n  return false;\n}\n\n/** 当左边的值不为truthy或0时，返回feedback */\nexport function vie(arg, feedback = \"-\") {\n  return isTruthyOrZero(arg) ? arg : feedback;\n}\n"],"names":["isTruthyOrZero","padSingleNumber","number","String","validateFormatString","defaultConfig","delimiter","repeat","lastRepeat","reverse","getPatterns","str","pattern","options","test","console","warn","patterns","split","map","p","trim","filter","length","strArr","maxLength","reduce","prevIndex","index","Number","fillLength","lastPatter","Math","ceil","originArr","Array","from","forEach","formatString","opt","patternMeta","prevPattern","_pattern","ind","currentIndex","replaceIndex","splice","join","unFormatString","prev","pt","getFirstTruthyOrZero","args","arg","vie","feedback"],"mappings":"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"}