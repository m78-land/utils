{"version":3,"sources":["/Users/lixianjie/project/openSource/utils/src/date.ts"],"sourcesContent":["import { padSingleNumber } from \"./format.js\";\n\n/**\n * Receive a date string, timestamp (ms), date object, and return it after converting it into a date object, or return null if the conversion fail\n *  */\nexport function parseDate(date: any): Date | null {\n  let d = date;\n  if (typeof date === \"string\") {\n    d = date.replace(/-/g, \"/\"); // Safari无法解析 2020-01-01 格式的日期\n  }\n  d = new Date(d);\n\n  // 处理Invalid Date\n  if (d instanceof Date && isNaN(d.getTime())) {\n    return null;\n  }\n\n  return d;\n}\n\n/**\n * format the date into readable date string\n * @param date - new Date() | any time(string/date object/timestamp .etc) that can be parsed by parseDate(), default current time\n * @param format - 'YYYY-MM-DD hh:mm:ss' | custom format\n * @return - formatted date string, if date is invalid, return an empty string\n * @example\n datetime(); // => 2020-06-01 18:45:57\n datetime('2020-06-01 15:30:30', 'hh时mm分 YYYY年MM月'); // => 15时30分 2020年06月\n datetime(1591008308782, 'YY年MM月DD日'); // => 21年06月01日\n datetime('1591008308782'); // => ''\n datetime('hello'); // => ''\n datetime(new Date()); // => 2020-06-01 18:46:39\n */\nexport function datetime(date = new Date(), format = \"YYYY-MM-DD hh:mm:ss\") {\n  const d = parseDate(date);\n\n  if (!d) {\n    return \"\";\n  }\n\n  const fn = (d) => {\n    return (\"0\" + d).slice(-2);\n  };\n\n  const formats = {\n    YY: String(d.getFullYear() + 1).slice(2),\n    YYYY: d.getFullYear(),\n    MM: fn(d.getMonth() + 1),\n    DD: fn(d.getDate()),\n    hh: fn(d.getHours()),\n    mm: fn(d.getMinutes()),\n    ss: fn(d.getSeconds()),\n  };\n\n  return format.replace(/([a-z])\\1+/gi, (a) => {\n    return formats[a] || a;\n  });\n}\n\nconst oneMS = 100;\nconst oneS = oneMS * 10;\nconst oneM = 60 * oneS;\nconst oneH = 60 * oneM;\nconst oneD = 24 * oneH;\n\n/**\n * get d day, h hour, m minute, s second, ms millisecond between the current time and the specified time. If the current time exceeds the incoming time, all return to '00' and timeOut is true\n * @param date - any time that can be parsed by parseDate()\n * @return count data\n */\nexport function getDateCountDown(date?: any) {\n  const dt = parseDate(date);\n\n  if (!dt) {\n    return {\n      ms: \"00\",\n      s: \"00\",\n      m: \"00\",\n      h: \"00\",\n      d: \"00\",\n      timeOut: true,\n    };\n  }\n\n  const start = Date.now();\n  const end = dt.getTime();\n\n  const diff = end - start;\n\n  if (diff < 0) {\n    return getDateCountDown();\n  }\n\n  const fr = Math.floor;\n\n  // h、m、s 用单位总数取余就是该单位对应的ms，除单位总数获得单位\n  const d = fr(diff / oneD);\n  const h = fr((diff % oneD) / oneH);\n  const m = fr((diff % oneH) / oneM);\n  const s = fr((diff % oneM) / oneS);\n  const ms = fr(diff % oneMS);\n\n  return {\n    d: padSingleNumber(d),\n    h: padSingleNumber(h),\n    m: padSingleNumber(m),\n    s: padSingleNumber(s),\n    ms: padSingleNumber(ms),\n    timeOut: false,\n  };\n}\n\n/**\n * Whether the current time or the specified time is within a certain period of time\n * @param startDate - start time\n * @param endDate - end time\n * @param currentDate - mid time, default is now\n * @return - whether within a time period\n * */\nexport function isBetweenDate(startDate: any, endDate: any, currentDate: any) {\n  const s = parseDate(startDate);\n  const e = parseDate(endDate);\n\n  if (!s || !e) return false;\n\n  if (currentDate) {\n    const c = parseDate(currentDate);\n    if (!c) return false;\n\n    return c <= e && c >= s;\n  }\n\n  const c = new Date();\n\n  return c <= e && c >= s;\n}\n"],"names":["parseDate","datetime","getDateCountDown","isBetweenDate","date","d","replace","Date","isNaN","getTime","format","fn","slice","formats","YY","String","getFullYear","YYYY","MM","getMonth","DD","getDate","hh","getHours","mm","getMinutes","ss","getSeconds","a","oneMS","oneS","oneM","oneH","oneD","dt","ms","s","m","h","timeOut","start","now","end","diff","fr","Math","floor","padSingleNumber","startDate","endDate","currentDate","e","c"],"mappings":"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"}